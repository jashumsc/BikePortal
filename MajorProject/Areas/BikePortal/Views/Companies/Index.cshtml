@model IEnumerable<MajorProject.Models.Company>
@using Microsoft.AspNetCore.Identity
@using MajorProject.Models.Enums

@*----- to find if user is logged in *@
@inject SignInManager<IdentityUser> _signInManager

@*----- gets the user object to see properties, roles *@
@inject UserManager<IdentityUser> _userManager

@{
    bool isLoggedIn = _signInManager.IsSignedIn(this.User);

    bool isUserAdmin = false;
    IdentityUser user = await _userManager.GetUserAsync(this.User);         // gets the Logged In User
    if (user != null)
    {
        isUserAdmin = await _userManager.IsInRoleAsync(user, MyIdentityRoleNames.PortalAdmin.ToString());
    }
}
@{
    ViewData["Title"] = "Index";
}

<h1>Top Brands</h1>

@if(isUserAdmin){
    <p>
        <a asp-action="Create">Create New</a>
    </p>
}

@foreach (var item in Model)
    {
        <div class="row">
            <div class="col-6">
                <img class="card-img-top" src="@item.CompanyImage" alt="Card image" width="50" height="200">
            </div>
              
            <div class="col-6">
            <b> @item.CompanyName</b>
            <p>@item.CompanyDescription</p>
            @if (isUserAdmin)
            {
                
                <a asp-action="Details" asp-route-id="@item.CompanyId">Details |</a>
                <a asp-action="Delete" asp-route-id="@item.CompanyId">Delete</a>



            }
            <a class="btn btn-sm btn-success" asp-area="BikePortal" asp-controller="Bikes"
           asp-action="GetBikesOfCompany"
           asp-route-filterCompanyId="@item.CompanyId">See Bikes</a>
            </div>
        </div>
        <hr/>
    }