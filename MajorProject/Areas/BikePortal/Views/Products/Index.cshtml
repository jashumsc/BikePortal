@model IEnumerable<MajorProject.Models.Product>

@{
    ViewData["Title"] = "Index";
}
@using Microsoft.AspNetCore.Identity
@using MajorProject.Models.Enums
@*----- to find if user is logged in *@
@inject SignInManager<IdentityUser> _signInManager

@*----- gets the user object to see properties, roles *@
@inject UserManager<IdentityUser> _userManager

@{
    bool isLoggedIn = _signInManager.IsSignedIn(this.User);

    bool isUserAdmin = false;
    IdentityUser user = await _userManager.GetUserAsync(this.User);         // gets the Logged In User
    if (user != null)
    {
        isUserAdmin = await _userManager.IsInRoleAsync(user, MyIdentityRoleNames.PortalAdmin.ToString());
    }
}


<h1>Available Spare Parts</h1>

@if (isUserAdmin)
{
    <p>
        <a asp-action="Create">Create New</a>
    </p>
}


<div class="container">
    <div class="row gy-3 my-3">
        @foreach (var item in Model)
        {
            <div class="col-md-4">
                <div class="card" style="width:18rem;">
                    <img class="card-img-top" src="@item.ProductImage" alt="Card image" width="50" height="200">
                    <div class="card-body">
                        <h4 class="card-title">@item.ProductName</h4>
                        <h5> Original Price : @item.ProductPrice.00</h5>
                        <a class="btn btn-danger" asp-area="BikePortal" asp-controller="BuyProducts" asp-action="Create" asp-route-filterProductId="@item.ProductId">Buy Now</a>

                        

                        @if (isUserAdmin)
                        {
                           

                            <a asp-action="Details" asp-route-id="@item.ProductId"> Details </a>
                            <a asp-action="Delete" asp-route-id="@item.ProductId"> Delete </a>
                        }
                    </div>
                </div>
            </div>

        }
    </div>
    <br />
</div>